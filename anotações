	<!-- HTML é case insensitive-->

	<!--tag meta contém metadados - informações para o site, que não irão aparecer para o usuári->
	
<!-- Semântica no HTML: 
	- Usar tags corretas nos locais corretos, para que todos que leiam o site consigam entender corretamente a mensagem (até mesmo deficientes visuais)

		<b> x <strong>. 
		- <b>: deixa texto em negrito. 
		- <strong>: é uma tag semântica, serve para dar ênfase num elemento muito importante (ajuda nos leitores de texto), mas também deixa o texto em negrito.
		
		<i> x <em>:
		- <i>: deixa texto em itálico
		- <em>: utilizada para dar ênfase (ajuda nos leitores de texto), mas deixa os textos em itálico

		<del> x <s>:
		- <del>: semântica
		- <s>: tag física

	- Usar headings corretamente: necessário usá-los
		de acordo com a hierarquia entre eles.
		- São utilizados por buscadores do google e leitores de tela (para usuários com visual impairments). Há headings de H1-H6
		- Os headings de maior hierarquia não precisam ser maiores que os demais, só devem estar corretos considerando a hierarquia de títulos e subtítulos      -->

	<!-- Tags em bloco e inline:
		- Tags em bloco:  como H
			Apresentadas em bloco para o usuário. 
			Blocos contém: conteúdo, padding (espaço que envolve o conteúdo), borda (margens do padding) e margem (margens mais externas)
			Quando é adicionado um novo parágrado para elementos em bloco, ocorre a quebra de linha (e fica um espaçamento entre os dois parágrafos, pois o elemento contém espaçamentos invisíveis ao seu redor).
		- Tags inline: como o p
			Apresentadas em linha, e não podem conter tags em bloco aninhadas.

		Com o CSS é possível personalizar os componentes de um elemento em bloco
		É possível alterar o display de um elemento para ser um display em bloco (como foi feito para o elemento img no style.css)-->

	<!--Aninhamento de tags: algumas tags podem conter outras. 
		- Não  se pode aninhar elementos em bloco dentro de  elementos inline. Porém, podemos colocar elementos inline dentro de tags em bloco (como blockquote).
		- Em <p> não se pode colocar tags em bloco, pois o texto deve ser fluido (in line).
		- Várias tags podem ser aninhadas em p:
			O texto html vem cru. Para tornar partes maiores, menores, negrito, itálico... utilizamos tags.
			<sub> <sup> <small> <br> <q> <q> etc
		OBS.: <blockquote>  é um elemento em bloco, que não pode vir dentro de <p>. Em <p> usaríamos o <q>, com  o atributo cite="". 
	-->

	<!--Toda tag html pode receber uma tag style, que recebe um CSS-->
	<!-- rel: atributo que estabelece qual é a relação entre o  arquivo/URL linkado e o documento atual. Pode ser usado em <a>, <link>-->

	<!-- Tags de container genéricos: não fazem nada e não tem significado semântico. Servem apenas para estilização.
		- Span: container genérico inline
		- Div: container genérico em bloco-->

	<!-- Tags HTML de separação de conteúdos
		- Header: para cabeçalhos
		- Main: parte do texto que envolve o conteúdo principal

	-->

	<!-- Elementos de estrutura normalmente são do tipo box, e quebram linha-->
	<!-- O seletor * seleciona todos os elementos da página
	- Pading e margin: topo -> direita -> baixo -> esquerda (sentido horário)

        -->


Box model: a maioria dos elementos html são representados por boxes retangulares
	- Essas caixas contém (de fora para dentro): 
	- margem: distância entre os limites da página e o conteúdo e sua borda. É transparente.
		- Serve para empurrar um elemento de outro
		- Se aumentar a margem, o conteúdo ficará mais distante do margin edge (limite da margem)
		- A margem entre dois elementos não se somam (elas se sobrepõem). Caso as margens sejam do mesmo tamanho, elas se mantém iguais. Caso sejam diferentes, a distância entre os
		dois elementos será igual à margem maior.

		- margin: cima, direita, baixo, esquerda (larguras)


		- border: linha que demarca o fim do padding e início da margem.
			OBS.: aumentar a largura da borda não diminui o padding. Elas não se sobrepõem.
			- border: largura, style, color.
			- box-sizing: border-box; (borda e margem passam a ficar dentro do limite do box. Se eu definir o width de 10px, e border de 5px, o total do box será de 10px, somando tudo)
				
		- padding: espaço ao redor do contéudo, enchimento da caixa
			- Distância interna do conteúdo para a borda. 
			- Aumentar o padding: faz com que haja uma maior distância entre o conteúdo e a borda do elemento.
				
			- padding: cima, direita, baixo, esquerda (larguras)
				
		- conteúdo
			- É possível definir a altura e largura da área de conteúdo.
				- Caso não sejam definidas, por padrão, o bloco irá ocupar toda a largura da tela, e sua altura será de acordo com o tamanho do conteúdo.

		- Elementos com display em block seguem o box model:
			- Todos os elementos para separação de conteúdo têm display block
			- Irão quebrar linha
			- Se não for definida largura: ocupam toda a largura da tela

			- Transformar um elemento com display inline em block:
				- CSS display: block
			


		- Colocar imagem de fundo:
			- background-image: url ()
			- background-size: cover ()
				- Faz com que a imagem se ajuste dentro da caixa
			- background-position: center (pode ser outros alinhamentos)
				- Alinha o centro da imagem no centro da caixa, considerando altura e largura
		
		- Listas:
			- ul e ol: recebem list itens (li)
				- ul: unordered list
				- ol: ordered list
				- type: tipo de enumeração (1, A, I, start)

			- dl: description list (recebe descrição de um termo).
				- dt: termo
				- dd: descrição

			- <a>: <a> dentro de qualquer elemento: ele deve ser estilizado no CSS, não adianta estilizar o pai, pois o <a> já possui um estilo padrão, que se sobressai.
				OBS.: para ser definidas margem e padding, é necessário alterar o display para block

			- Propriedades que podem ser alteradas:
				background-color: ;
				margin: 0px;
				padding: 0px;
				list-style: none;
					- São as bolinhas/números...
				text-align: ;
				height: ;
				gap: 0.2rem;

				- Lista na horizontal:
				display: flex (itens ficam lado a lado, sem espaçamento entre eles)
					- flex-direction: row (é o padrão, mas podemos usar column, column-reverse...)
				justify-content: na horizontal
				align-items: na vertical
				width:
				OBS.: o display padrão da lista é grid (elementos em coluna, quebrando linha).
		