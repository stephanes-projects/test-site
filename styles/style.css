* {
	margin: 0;
	padding: 0;
	max-width: 1920px;
	box-sizing: border-box;
	flex-wrap: nowrap;
}

html {
	font-size: 62.5%;
	scroll-behavior: smooth;
	height: 100%;
	/* width: 100%; */
	overflow-y: scroll;
	/* overflow-x: hidden; */
}

body {
	font-family: "Open Sans", serif;
	font-size: 100%;
	line-height: 100%;
	background-color: white;
	margin: 0;
	height: 100%;
}

.conteúdo-página {
	/* box-sizing: content-box; */
	box-sizing: border-box;
	padding: 0rem 5rem;
	/* margin-bottom: 40px; */
	min-height: 100vh;
	width: 100vw;
}

.logo {
	display: flex;
	align-items: center;
	justify-content: right;
	width: 50%;
	background-color: #f00;
	height: 20vh;
}

#imagem-logo {
	height: 15vh;
	width: 50%;
	padding: 0;
	margin: 0;
	background-color: #a79e84;
}

header {
	width: 100%;

	/* gap: 5rem; */
	background-color: black;
	margin: 0;
	box-sizing: border-box;
}

.topnav {
	display: flex;
	box-sizing: border-box;
	flex-direction: row;
	justify-content: space-around; /* define a direção do eixo principal dos flex items*/
	align-items: center;
	/* width: 100%; */
	flex-grow: 10;
	cursor: pointer;
	font-size: 2rem;
	list-style: none;
	height: fit-content;
}

.topnav li {
	flex: 1 1 320px;
}

.topnav :nth-child(1) {
	flex: 2 1 320px;
}

.topnav a:hover {
	color: #bd5734;
	/* background-color: rgba(0, 0, 0, 0.2); */
}

.menu-button {
	display: flex;
	justify-content: right;
	align-items: center;
	padding-right: 0px;
}

#login-button {
	display: flex;
	align-items: center;
	border-radius: 0.6rem;
	background-color: white;
	font-family: "Open Sans", serif;
	font-weight: bold;
	height: 40px;
	padding: 2rem;
	width: fit-content;
	color: #bd5734;
}

#login-button:hover {
	border: 2px solid #bd5734;
	cursor: pointer;
}

.botoes-menu-sup {
	display: flex;
	background-color: blue;
	text-decoration: none;
	color: white;
	font-size: 2.5rem;
	font-weight: bold;
}

.banner {
	display: flex;
	justify-content: center;
	align-items: center;
	margin-top: 50px;

	width: 100vw;
}

.banner h1 {
	position: absolute;
	color: #7a3b2e;
	font-weight: bold;
	font-size: 5.5rem;
	font-family: "Franklin Gothic Medium", "Arial Narrow", Arial, sans-serif;
	text-shadow: 0.5rem 0.2rem 0.1rem black;
}

.banner img {
	opacity: 0.5;
	width: 70vw;
}

h1,
h2 {
	line-height: 100%;
}

h1 {
	margin: 0;
	padding: 10px 0;
	font-family: "Open Sans", serif;
	color: #7a3b2e;
	font-weight: bold;
	font-size: 2.5rem;
	text-align: left;
}

h1:hover:not(form h1, .banner h1) {
	text-decoration: underline solid #bd5734;
	cursor: pointer;
}

#aplicação-tema,
#OLOP,
#MLAT,
#MLP {
	padding: 40px 0px 40px 0;
}

.lista {
	list-style: inside;
	color: black;
	padding: 10px 0px 10px 30px;
}

.lista a {
	text-decoration: none;
	color: black;
}

.lista a:hover {
	text-decoration: underline solid #bd5734;
}

p,
li {
	font-size: 20px;
	line-height: 2;
	letter-spacing: 1px;
	text-align: justify;
	margin: 5px 0px 5px 0;
}

/* p + p,
header + p {
	text-indent: 1.5rem;
} */

.citação {
	text-align: left;
	margin-left: 0px;
}

#mapa-endereço {
	/* margin: 0 auto; */
	display: flex;
	justify-content: center;
	margin: 0 auto;
	width: 60vw;
}

iframe {
	border-radius: 1rem;
}

.table {
	border-collapse: collapse; /* Junta as bordas da tabela*/
	font-family: sans-serif;
	width: 40vw;
	height: 40vh;
	padding: 0;
	margin: 50px auto;
}

thead td,
tbody td,
table th {
	border: 0.1rem solid #7a3b2e;
	padding: 5px;
	text-align: center;
	font-size: 1.5rem;
	height: 5vh;
}

table caption {
	caption-side: bottom;
	font-size: 1rem;
	text-align: left;
	font-style: italic;
	margin: 10px 0;
}

tfoot td,
table th {
	background-color: #a79e84;
	font-weight: bold;
	text-align: center;
	font-size: 1.5rem;
}

tfoot {
	font-style: italic;
	height: 5vh;
}

footer {
	width: 100vw;
	margin: 0;
	padding: 0;
	box-sizing: border-box;
}

#footer {
	background-color: black;
	width: 100%;
	display: flex;
	flex-direction: column;
	align-items: end;
	padding-right: 2rem;
	flex-wrap: wrap;
}

/* #footer {
	background-color: black;
	list-style: none;
	padding: 1rem;
	display: block;
	justify-content: right;
	flex-direction: column;
	width: 100%;
} */
#footer li a {
	font-size: 1.5rem;
	text-decoration: none;
	color: white;
	font-weight: bold;
	cursor: pointer;
	text-align: right;
}

#footer li a:hover {
	color: #bd5734;
	background-color: rgba(0, 0, 0, 0.2);
}

#titulo-form {
	display: flex;
	background-color: #bd5634c4;
	border: 2px solid #bd5734;
	height: 150px;
	margin: 0 auto;
	align-items: center;
	justify-content: center;
	border-radius: 5rem;
}

form h1 {
	font-size: 2rem;
	color: white;
	text-decoration: none;
	font-weight: bold;
}

form p {
	line-height: 30px;
	font-size: 20px;
	margin: 0;
}

label {
	cursor: pointer;
	display: block;
	margin: 10px 0px;
	font-weight: bold;
	width: 40vw;
	font-size: 18px;
	line-height: 2rem;

	/* border: 1px solid black; */
}

input,
select,
textarea {
	display: block;
	margin: 0.5rem 0px;
	border: 0.05rem solid black;
	transition: all 300ms ease-in-out;
	max-width: 40vw;
}

input:focus:not(.IELTS-input),
select:focus,
textarea:focus {
	/* border: 2px solid blue; por que não aplica? */
	background-color: rgb(194, 194, 194);
	outline: none;
	border: 0.005rem solid blue;
}

.div-botoes-finais {
	display: flex;
	gap: 5px;
}

.botao-final {
	border: 0.1rem solid #bd5734;
	border-radius: 15%;
	padding: 0.5rem;
}

.botao-final:hover {
	background-color: rgba(0, 0, 0, 0.2);
}

.formulario {
	background-color: #a79e846c;
	width: 50vw;
	margin: 5rem auto;
	padding: 2rem;
	border: 0.2rem solid #bd5734;
	border-radius: 5rem 0rem;
	box-shadow: 0 0.5rem 0 0 grey;
}

.IELTS {
	display: flex;
	margin: 0;
	width: 10vw;
	gap: 0rem;
}

.IELTS-input {
	border-radius: 50%;
	background-color: white;
	appearance: none;
	width: 1.5rem;
	height: 15px;
}

.IELTS-input:checked {
	border-radius: 50%;
	border: 3px solid blue;
	/* background-color: white; */
}

/* .IELTS-input:focus {
	background-color: white;
	border: 3px solid blue;
} */

/* .espelho-ielts1:not(.IELTS-input-sim:checked) {
	background-color: black;
} */

.menu-login,
.menu-registre-se {
	display: flex;
	height: 10vh;
	padding-left: 2rem;
	background-color: black;
	width: 100vw;
}

.login,
.registre-se {
	background-color: rgba(0, 0, 0, 0.2);
	width: 50vw;
	margin: 0 auto;
}

.titulo-login,
.titulo-registre-se {
	font-size: 4rem;
	text-align: center;
	font-weight: bold;
	padding-top: 2rem;
}

.link:link {
	color: blue;
}

.link:visited {
	color: purple;
}

.item::after {
	content: " - ";
}

a:hover:not(.link, .link-footer, .botoes-menu-sup)::after {
	content: " * ";
	color: #f00;
}

#footer li a:hover::before {
	content: " -> ";
}

.introdução p::first-letter {
	font-size: 5rem;
	color: #bd5734;
	font-weight: bold;
}

p:not(:first-child) {
	text-indent: 3rem;
}

@media (max-width: 568px) {
	.topnav {
		display: flex;
		flex-direction: column;
		justify-content: right;
	}
}

/*

- Display grid:
	- Próprio para fazer grades/tabelas
	- grid-template-columns: 33% 33% 33%;
		- Define o número de colunas e a width delas.
		- Medida em fr (fragmento)
			- A coluna irá ocupar fragmentos do espaço em branco restante.
			Ex.: grid-template-columns: 60px 1fr 1fr;
			Ex.: grid-template-columns: 1fr 1fr 1fr;

		- Uso da função repeat: 
			- Para criar várias colunas de forma mais rápida, já definindo a width de todas elas.
			grid-template-columns: repeat(10, 1fr);
				- Cria 10 colunas cuja divisão do espaço vazio é de 1fr para cada
			grid-template-columns: repeat(10, 2fr, 1fr);
				- A largura das colunas irá se alternar, primeiro 2fr e depois 1fr.


	- gap: pode ser definido gap entre os elementos da grid
		OBS.: o gap é somado à width e height, tanto no display flex quanto no display grid, levando ao surgimento de overflow, dependendo das unidades de largura e altura que foram utilizadas.


	- Adaptação para dispositivos móveis/telas menores:
		- Pode ser feita a adaptação da grid utilizando media-queries, ou na própria definição da grid-template-columns, utilizando o auto-fill e minmax.
		- grid-template-columns: repeat (auto-fill, minmax(320px, 1fr)); ** normalmente grids são utilizadas dessa forma (a não ser em casos específicos)

			- auto-fill: o número de colunas será definido automaticamente para seguir o minmax.
			- minmax: define a width mínima e máxima de cada coluna.
				- colocar como min algum breakpoint de dispositivos móveis, como 320px.



	- grid-template-rows:
		- Número de linhas por cada grid element

	- Definir que um elemento ocupe mais de uma linha ou coluna:
		- grid-column-start, grid-column-end, grid-row-start, grid-row-end:
		.grid div:nth-child (5) {
			grid-column-start: 1;
			grid-column-end: 5;
		}

		- grid-row e grid-column: shorhand de row start/end e column start/end
		-grid-row: span x;
		-grid-column: span y;

		
	OBS.: há como dois elementos se sobreporem. Nesse caso, utilizar o z-index.


	- Span em dispositivos mobile:
		- Apenas o auto-fill e minmax não são suficientes para criar um design responsivo para grids quando se usa span de 2+ (pois a grid fica tentando fazer o span de 2+ colunas ou linhas, mesmo se a tela permitir apenas 1 coluna).
			- Nesse caso, o número de colunas não é ajustado conforme definido, e ocorre o overflow.
			- Nesse caso, pode-se usar media-queries.
				@media (max-width: 768px) {
				.grid div:nth-child(1) {
				grid-column: span 1;
				}
				}

	
	- Linhas e colunas: possível ver no inspecionar elementos.
		- Há sempre uma linha e coluna antes de iniciar e terminar cada elemento, então uma grid com 6 linhas de elemento, vai ter 7 linhas no total, pois há uma linha abaixo dos últimos elementos.
		- É possível nomear essas linhas e colunas:
				grid-template-columns: 
					[um] 1fr
					[dois] 1fr
					[tres] 1fr
					[quatro];
		
		- Pode-se utilizar os nomes definidos das linhas e colunas para definir grid-row e grid-column
				.grid div:nth-child (5) {
				grid-column: um / quatro;
				grid-row: um / tres;
				}

		- Utilizar os números das linhas e das colunas para definir grid-row e grid-column: 
				- grid-column: span 2 / span 3;


	- grid-area: shorthand para definir start row, start column, end row e end column
		grid-area: 1 / 1 / 4 / 3;

	
	- Gap em grids:
		gap: 30px (linhas) 80px (colunas);
			- Shortcut para definir o gap de linha e coluna.
		row-gap
		column-gap



/* .test-1 {
	display: block;
	background-color: #bd5734;
	opacity: 0.5;
	box-sizing: border-box;
	width: 50rem;
	height: 30rem;
	margin: 0 auto 50px auto;
	padding: 80px;
	position: absolute;
	top: 510vh;
	left: 10rem;
	right: 10rem;
	bottom: 20rem;
	overflow: hidden;
	z-index: -1;
}

.test-2 {
	background-color: aqua;
	box-sizing: content-box;
	max-width: 500px;
	max-height: 200px;
	padding: 80px;
	margin: 50px auto;
	z-index: -2;
} */

/* @media (max-width: 768px) {
	.conteúdo-página {
		width: 100vw;
	}

	.formulario {
		width: 50vw;
	}
} */

.flex-pai {
	display: flex;
	align-items: end;
	margin: 5rem auto;
	flex-flow: row wrap;
}

.flex-filho {
	display: flex;
	flex-flow: row wrap;
	background-color: aqua;
	margin: 5rem;
	padding: 5rem;
	width: 100%;
	height: fit-content;
}

.flex-neto {
	display: flex;
	flex-flow: wrap;
	justify-content: flex-end;
}

.flex-neto .elemento-neto {
	width: 5rem;
	height: 5rem;
	margin: 0.5rem;
	background-color: aquamarine;
}

.grid {
	max-width: 1200px;
	margin: 0 auto;
	display: grid;
	/* grid-template-columns: repeat(auto-fill, minmax(320px, 1fr)); */
	/* grid-template-columns: repeat(auto-fill, minmax(320px, 1fr)); */
	grid-template-columns:
		[um] 1fr
		[dois] 1fr
		[tres] 1fr
		[quatro];
	grid-template-rows: repeat(2, 1fr);
	gap: 30px;
}

.grid div {
	background-color: #bd5734;
	min-height: 100px;
}

/* .grid div:nth-child(2) {
	grid-column-start: 2;
	grid-column-end: 4;
	grid-row-start: 1;
	grid-row-end: 4;
} */

.grid div:nth-child(1) {
	grid-row: span 2;
	grid-column: um / quatro;
	background-color: aqua;
}

@media (max-width: 768px) {
	.grid div:nth-child(1) {
		grid-column: span 1;
	}
}
